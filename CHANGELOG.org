#+title: Change Log for ollama-buddy
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for each tagged commit on the
project's main git repository: [[https://github.com/captainflasmr/ollama-buddy

* Versions

** <2025-03-12> *0.7.2*

Added menu model colours back in and removed some redundant code

** <2025-03-11> *0.7.1*

Added debug mode to display raw JSON messages in a debug buffer

- Created new debug buffer to show raw JSON messages from Ollama API
- Added toggle function to enable/disable debug mode (ollama-buddy-toggle-debug-mode)
- Modified stream filter to log and pretty-print incoming JSON messages
- Added keybinding C-c D to toggle debug mode
- Updated documentation in welcome message

** <2025-03-11> *0.7.0*

Added comprehensive Ollama parameter management

- Added customization for all Ollama option API parameters with defaults
- Only send modified parameters to preserve Ollama defaults
- Display active parameters with visual indicators for modified values
- Add keybindings and help system for parameter management
- Remove redundant temperature controls in favor of unified parameters

** <2025-03-10> *0.6.1*

Refactored prompt handling so each org header line should now always have a prompt for better export

- Added functionality to properly handle prompt text when showing/replacing prompts
- Extracted inline lambdas in menu actions into named functions
- Added fallback for when no default model is set

** <2025-03-08> *0.6.0*

Chat buffer now in org-mode

- Enabled =org-mode= in chat buffer for better text structure
- Implemented =ollama-buddy--md-to-org-convert-region= for Markdown to Org conversion
- Turn org conversion on and off
- Updated keybindings =C-c C-o= to toggle Markdown to Org conversion

** <2025-03-07> *0.5.1*

Added temperature control

- Implemented temperature control parameter
- Added menu commands for setting (T), resetting (0)
- Added keybindings (C-c t/T/0) for quick temperature adjustments
- Updated header line and prompt displays to show current temperature
- Included temperature info in welcome screen with usage guidance

** <2025-03-06> *0.5.0*

Implemented session management, so you can now save your conversations and bring them back with the relevant context and chat history!

- Chat history is now maintained separately for each model
- Added session new/load/save/delete/list functionality
- A switch in context can now be achieved by any of the following methods:
  - Loading a previous session
  - Creating a new session
  - Clearing history on the current session
  - Toggling history on and off

** <2025-03-04> *0.4.1*

Added a sparse version of =ollama-buddy= called =ollama-buddy-mini=, see the github repository for the elisp file and a description in =README-mini.org=

** <2025-03-03> *0.4.0*

Added conversation history support and navigation functions

- Implemented conversation history tracking between prompts and responses
- Added configurable history length limits and visual indicators
- Created navigation functions to move between prompts/responses in buffer

** <2025-03-02> *0.3.1*

Enhanced model colour contrast with themes, allowing =ollama-buddy-enable-model-colors= to be enabled by default.

** <2025-03-01> *0.3.0*

Added real-time token usage tracking and display

- Introduce variables to track token counts, rates, and usage history
- Implement real-time token rate updates with a timer
- Add a function to display token usage statistics in a dedicated buffer
- Allow toggling of token stats display after responses
- Integrate token tracking into response processing and status updates
- Ensure cleanup of timers and tracking variables on completion or cancellation

** <2025-02-28> *0.2.4*

Added model-specific color highlighting (experimental)

- Introduce `ollama-buddy-enable-model-colors` (default: nil) to toggle model-based color highlighting.
- Assign consistent colors to models based on string hashing.
- Apply colors to model names in the menu, status, headers, and responses.
- Add `ollama-buddy-toggle-model-colors` command to toggle this feature.

This feature improves UI clarity, making it easier to visually distinguish models.

** <2025-02-28> *0.2.3*

Added Prompt History Support

- Prompts are now integrated into the Emacs history mechanism which means they persist across sessions.  
- Use =M-p= to navigate prompt history, and =M-p= / =M-n= within the minibuffer to insert previous prompts.  

** <2025-02-27> *0.2.2*

Added support for role-based presets

- Introduced `ollama-buddy-roles-directory` for storing role preset files.
- Implemented interactive functions to manage roles:
  - `ollama-buddy-roles-switch-role`
  - `ollama-buddy-role-creator-create-new-role`
  - `ollama-buddy-roles-open-directory`
- Added ability to create and switch between role-specific commands.
- Updated menu commands to include role management options.

** <2025-02-26> *0.2.1*

added multishot execution with model selection

- Assign letters to models for quick selection
- Implement multishot mode for sequential requests to multiple models
- Store responses per model in registers named after assigned letters
- Display multishot progress in status
- Bind `C-c C-l` to trigger multishot prompt

** <2025-02-19> *0.2.0*

Improved prompt handling in chat buffer and simplified setup

- Chat buffer now more prompt based rather than ad-hoc using C-c C-c to send and C-c C-k to cancel
- Connection monitor now optional, ollama status visibility now maintained by strategic status checks simplifying setup.
- Can now change models from chat buffer using C-c C-m
- Updated intro message with ascii logo
- Suggested default "C-c o" for =ollama-buddy-menu=
- defcustom ollama-buddy-command-definitions now will work in the customization interface.

** <2025-02-13>

Models can be assigned to individual commands

- Set menu :model property to associate a command with a model
- Introduce `ollama-buddy-fallback-model` for automatic fallback if the specified model is unavailable.
- Improve `ollama-buddy--update-status-overlay` to indicate model substitution.
- Expand `ollama-buddy-menu` with structured command definitions using properties for improved flexibility.
- Add `ollama-buddy-show-model-status` to display available and used models.
- Refactor command execution flow to ensure model selection is handled dynamically.

** <2025-02-12>

- =ollama-buddy= updated in preparation for MELPA submission
- Removed C-c single key user keybinding as part of package definition and in the README gave guidance on defining a user keybinding to activate the ollama buddy menu
- Added =ellama= comparison description
- Activating and deactivating the =ollama= monitor process now users responsibility

** <2025-02-11>

Significant improvements and refactoring, particularly around connection handling, streaming responses, and status monitoring.

- Replace curl-based requests with native network processes
- Added customizatble ollama host and port  
- Added connection monitoring with automatic status updates
- Added permanently visible status showing connection state and current model
- Improve error handling for connection failures
- Refined AI assistant presentation

** <2025-02-07>

Increase menu columns to 4, add dictionary lookup and save chat options  

- Change `ollama-buddy-menu-columns` from 3 to 4  
- Rename "Describe code" menu key from `?d` to `?c`  
- Add dictionary lookup feature (`?d`)  
- Add synonym lookup feature (`?n`)  
- Add "Save chat" option (`?s`) to write chat buffer to a file  

** <2025-02-07>

Added query finished message.

** <2025-02-06>

- Initial release
- Basic chat functionality
- Menu-driven interface
- Region-based interactions
- Model switching support

* Testing

Developing locally and running through and evaluating elisp code.

Sending text below with various edge cases and challenging content to test =ollama-buddy= text handling capabilities.

#+begin_src text
=== Test Case 1: Special Characters and Symbols ===
¬ß ¬∂ ‚Ä† ‚Ä° ¬± √∑ √ó ‚â† ‚âà ~ ‚â§ ‚â• ¬µ ¬¢ ¬£ ‚Ç¨ ¬• ¬© ¬Æ ‚Ñ¢
‚Å∞ ¬π ¬≤ ¬≥ ‚Å¥ ‚Åµ ‚Å∂ ‚Å∑ ‚Å∏ ‚Åπ ‚Åø ‚àû ‚àë ‚àè ‚àö ‚àÇ ‚àÜ ‚àá ‚à´ ‚àÆ

=== Test Case 2: Quotation Marks and Apostrophes ===
"Smart quotes" vs "straight quotes"
Don't mix up 'single' and 'curly' quotes
She said: "I'm not sure about the 'nested quotes' here."

=== Test Case 3: JSON-like Content ===
{
  "key": "value with \"quotes\"",
  'problem': 'mixing quote types',
  nested: {
    "escape\\chars": "testing\nNewlines",
    "numbers": 123.456
  }
}

=== Test Case 4: Code Snippets with Mixed Syntax ===
#+end_srcpython
def test_func(x='test'):
    return f"Value is {x}\n"
#+begin_src 

<!-- HTML Comment -->
<div class="test">
    'Mixed content' && "quotes"
    =backticks= and $variables
</div>

=== Test Case 5: Unicode Characters ===
üåü Stars and üåô moons
üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Family emoji
üè≥Ô∏è‚Äçüåà Complex emoji
‚Üí ‚Üê ‚Üë ‚Üì ‚Üî ‚Üï ‚áÑ ‚áÖ

=== Test Case 6: Whitespace and Line Endings ===
Text with trailing spaces    
Text with tabs		between
Line with mixed endings\r\n
No ending on last line without newline

=== Test Case 7: Shell Special Characters ===
echo "Testing $(command substitution)"
grep -r "pattern" | awk '{print $1}' > output.txt
PATH=$PATH:/new/path; export PATH

=== Test Case 8: SQL-like Queries ===
SELECT * FROM "users" WHERE name LIKE '%O''Brien%';
INSERT INTO =table= ('column') VALUES ("mixed 'quotes'");

=== Test Case 9: URLs and Paths ===
https://example.com/path?param=value&special=%20space
C:\Program Files\Test\path with spaces\file.txt
/usr/local/bin/program\ with\ spaces

=== Test Case 10: Mixed Languages ===
English with espa√±ol
Êó•Êú¨Ë™û mixed with English
–†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç with ÌïúÍ∏Ä and ÿπÿ±ÿ®Ÿä

#+end_src

This test text src includes:

- Various Unicode and special characters
- Different types of quotation marks
- Mixed programming syntax
- Emojis and complex Unicode symbols
- Different line endings
- Shell commands with special characters
- SQL queries with mixed quotes
- URLs and file paths
- Mixed language content
- JSON-like structures
