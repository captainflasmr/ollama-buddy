#+title: Change Log for ollama-buddy
#+author: James Dyer
#+email: captainflasmr@gmail.com
#+language: en
#+options: ':t toc:nil author:nil email:nil num:nil title:nil
#+todo: TODO DOING | DONE
#+startup: showall

This document contains the release notes for each tagged commit on the
project's main git repository: [[https://github.com/captainflasmr/ollama-buddy

* Versions

** <2025-02-13>

Models can be assigned to individual commands

- Set menu :model property to associate a command with a model
- Introduce `ollama-buddy-fallback-model` for automatic fallback if the specified model is unavailable.
- Improve `ollama-buddy--update-status-overlay` to indicate model substitution.
- Expand `ollama-buddy-menu` with structured command definitions using properties for improved flexibility.
- Add `ollama-buddy-show-model-status` to display available and used models.
- Refactor command execution flow to ensure model selection is handled dynamically.

** <2025-02-12>

- =ollama-buddy= updated in preparation for MELPA submission
- Removed C-c single key user keybinding as part of package definition and in the README gave guidance on defining a user keybinding to activate the ollama buddy menu
- Added =ellama= comparison description
- Activating and deactivating the =ollama= monitor process now users responsibility

** <2025-02-11>

Significant improvements and refactoring, particularly around connection handling, streaming responses, and status monitoring.

- Replace curl-based requests with native network processes
- Added customizatble ollama host and port  
- Added connection monitoring with automatic status updates
- Added permanently visible status showing connection state and current model
- Improve error handling for connection failures
- Refined AI assistant presentation

** <2025-02-07>

Increase menu columns to 4, add dictionary lookup and save chat options  

- Change `ollama-buddy-menu-columns` from 3 to 4  
- Rename "Describe code" menu key from `?d` to `?c`  
- Add dictionary lookup feature (`?d`)  
- Add synonym lookup feature (`?n`)  
- Add "Save chat" option (`?s`) to write chat buffer to a file  

** <2025-02-07>

Added query finished message.

** <2025-02-06>

- Initial release
- Basic chat functionality
- Menu-driven interface
- Region-based interactions
- Model switching support

* Testing

Developing locally and running through and evaluating elisp code.

Sending text below with various edge cases and challenging content to test =ollama-buddy= text handling capabilities.

#+begin_src text
=== Test Case 1: Special Characters and Symbols ===
§ ¶ † ‡ ± ÷ × ≠ ≈ ~ ≤ ≥ µ ¢ £ € ¥ © ® ™
⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁿ ∞ ∑ ∏ √ ∂ ∆ ∇ ∫ ∮

=== Test Case 2: Quotation Marks and Apostrophes ===
"Smart quotes" vs "straight quotes"
Don't mix up 'single' and 'curly' quotes
She said: "I'm not sure about the 'nested quotes' here."

=== Test Case 3: JSON-like Content ===
{
  "key": "value with \"quotes\"",
  'problem': 'mixing quote types',
  nested: {
    "escape\\chars": "testing\nNewlines",
    "numbers": 123.456
  }
}

=== Test Case 4: Code Snippets with Mixed Syntax ===
#+end_srcpython
def test_func(x='test'):
    return f"Value is {x}\n"
#+begin_src 

<!-- HTML Comment -->
<div class="test">
    'Mixed content' && "quotes"
    =backticks= and $variables
</div>

=== Test Case 5: Unicode Characters ===
🌟 Stars and 🌙 moons
👨‍👩‍👧‍👦 Family emoji
🏳️‍🌈 Complex emoji
→ ← ↑ ↓ ↔ ↕ ⇄ ⇅

=== Test Case 6: Whitespace and Line Endings ===
Text with trailing spaces    
Text with tabs		between
Line with mixed endings\r\n
No ending on last line without newline

=== Test Case 7: Shell Special Characters ===
echo "Testing $(command substitution)"
grep -r "pattern" | awk '{print $1}' > output.txt
PATH=$PATH:/new/path; export PATH

=== Test Case 8: SQL-like Queries ===
SELECT * FROM "users" WHERE name LIKE '%O''Brien%';
INSERT INTO =table= ('column') VALUES ("mixed 'quotes'");

=== Test Case 9: URLs and Paths ===
https://example.com/path?param=value&special=%20space
C:\Program Files\Test\path with spaces\file.txt
/usr/local/bin/program\ with\ spaces

=== Test Case 10: Mixed Languages ===
English with español
日本語 mixed with English
Русский текст with 한글 and عربي

#+end_src

This test text src includes:

- Various Unicode and special characters
- Different types of quotation marks
- Mixed programming syntax
- Emojis and complex Unicode symbols
- Different line endings
- Shell commands with special characters
- SQL queries with mixed quotes
- URLs and file paths
- Mixed language content
- JSON-like structures
